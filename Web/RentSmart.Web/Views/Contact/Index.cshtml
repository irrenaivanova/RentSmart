@inject Microsoft.Extensions.Configuration.IConfiguration Configuration
@model RentSmart.Web.ViewModels.Contact.ContactFormViewModel
@{
    this.ViewData["Title"] = "Contact Us";
}

<form method="post" class="container col-md-6">
    <h4>@ViewData["Title"]</h4>
    <div class="form-group">
        <label asp-for="Name" class="form-label mt-2"></label>
        <input asp-for="Name" class="form-control" />
        <span asp-validation-for="Name" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Email" class="form-label mt-2"></label>
        <input asp-for="Email" class="form-control" value="@this.User.Identity.Name" />
        <span asp-validation-for="Email" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Title" class="form-label mt-2"></labelggggggggg
        <input asp-for="Title" class="form-control" />
        <span asp-validation-for="Title" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Content" class="form-label mt-2"></label>
        <textarea asp-for="Content" class="form-control" rows="5"></textarea>
        <span asp-validation-for="Content" class="text-danger"></span>
    </div>
@*     <input type="hidden" id="RecaptchaValue" name="RecaptchaValue" /> *@
    <button type="submit" class="btn btn-primary mt-2">Send a message</button>
</form>

@* @section Scripts
{
    <script src="https://www.google.com/recaptcha/api.js?render=@this.Configuration["GoogleReCaptcha:Key"]"></script>
    <script>
        grecaptcha.ready(function () {
            grecaptcha.execute('@this.Configuration["GoogleReCaptcha:Key"]', { action: 'contact_form' }).then(function (token) {
                document.getElementById("RecaptchaValue").value = token;
            });
        });
    </script>
} *@