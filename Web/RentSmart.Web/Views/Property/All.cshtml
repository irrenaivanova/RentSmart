@using RentSmart.Web.ViewModels.Properties.ViewModels
@model PropertiesViewModelWithPaging
@{
    ViewData["Title"] = "All Available";
    var previousPage = Model.CurrentPage - 1;
    var nextPage = Model.CurrentPage + 1;
}

@await Component.InvokeAsync("GetCountsComponent")
<div class="list-group col-md-2 offset-md-5 text-center mb-2 mt-2">
<a asp-action="AllSearch" asp-controller="Property" class="list-group-item list-group-item-action active">New search</a>
</div>

<div class="container mt-4">
    <h3 class="text-center">@ViewData["Title"]</h3>
    <hr />
    @if (!Model.Properties.Any())
    {
        <div class="alert alert-warning text-center mt-4">
            <strong>No results found!</strong> Please try adjusting your filters.
        </div>
    }
    else
    {
        <div class="row g-3">
            @foreach (var property in this.Model.Properties)
            {
                <div class="col-md-6">
                    <div class="card h-100" style="height: 200px;">
                        <div class="row g-0 h-100">
                            <div class="col-md-4 h-100" style="max-width: 200px;">
                                <img src="@property.ImageUrl" onerror="this.onerror=null; this.src='/images/noimage.jpg';" class="img-fluid rounded-start h-100"
                                     style="object-fit: cover; width: 100%;" alt="property-image">
                            </div>
                            <div class="col-md-8">
                                <div class="card-body">
                                    <h5 class="card-title"><i class="fa-solid fa-house"></i> @property.PropertyTypeName</h5>
                                    <p class="card-title text-danger"><i class="fa-solid fa-heart"></i> @property.TotalLikes  Total Likes</p>
                                    <p class="card-title"><i class="fa-solid fa-location-dot"></i> @property.CityName, @property.DistrictName</p>
                                    <p class="card-title"><i class="fa-regular fa-money-bill-1"></i> Price: @property.Price per month</p>
                                    <p class="card-title"><i class="fa-solid fa-up-right-and-down-left-from-center"></i> @property.Size sq.m, @property.Floor floor</p>
                                    <p class="card-title text-danger"><i class="fa-solid fa-star"></i> Average Rating: @property.AverageRating</p>
                                    <a type="button" class="btn btn-primary btn-sm" asp-controller="Property" asp-action="Details" asp-route-id="@property.Id">Go to Details</a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
    <div class="row g-3">
        @foreach (var property in this.Model.Properties)
        {
            <div class="col-md-6">
                <div class="card h-100" style="height: 200px;">
                    <div class="row g-0 h-100">
                        <div class="col-md-4 h-100" style="max-width: 200px;">
                            <img src="@property.ImageUrl" onerror="this.onerror=null; this.src='/images/noimage.jpg';" class="img-fluid rounded-start h-100"
                                 style="object-fit: cover; width: 100%;" alt="property-image">
                        </div>
                        <div class="col-md-8">
                            <div class="card-body">
                                <h5 class="card-title"><i class="fa-solid fa-house"></i> @property.PropertyTypeName</h5>
                                <p class="card-title text-danger"><i class="fa-solid fa-heart"></i> @property.TotalLikes  Total Likes</p>
                                <p class="card-title"><i class="fa-solid fa-location-dot"></i> @property.CityName, @property.DistrictName</p>
                                <p class="card-title"><i class="fa-regular fa-money-bill-1"></i> Price: @property.Price per month</p>
                                <p class="card-title"><i class="fa-solid fa-up-right-and-down-left-from-center"></i> @property.Size sq.m, @property.Floor floor</p>
                                <p class="card-title text-danger"><i class="fa-solid fa-star"></i> Average Rating: @property.AverageRating</p>
                                <a type="button" class="btn btn-primary btn-sm" asp-controller="Property" asp-action="Details" asp-route-id="@property.Id">Go to Details</a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<hr />
        <div>
    <ul class="pagination justify-content-center mb-5">
        <li class="page-item @(Model.CurrentPage==1 ? "disabled" : "")">
            <a class="page-link" asp-action="@Model.Action" asp-route-searchString="@Model.SearchString" 
               asp-route-itemsPerPage="@Model.ItemsPerPage" 
               asp-route-propertyType="@Model.PropertyType" 
               asp-route-pricePerMonth="@Model.PricePerMonth" 
               asp-route-sorting="@Model.Sorting" asp-route-id="@previousPage">&laquo;</a>
        </li>


        @if (Model.CurrentPage - 2 >= 2)
        {
            <li class="page-item">
                <a class="page-link" asp-action="@Model.Action" asp-route-searchString="@Model.SearchString" 
               asp-route-itemsPerPage="@Model.ItemsPerPage" 
               asp-route-propertyType="@Model.PropertyType" 
               asp-route-pricePerMonth="@Model.PricePerMonth" 
               asp-route-sorting="@Model.Sorting" asp-route-id="1">1</a>
            </li>
            @if (Model.CurrentPage - 2 > 2)
            {
                <li class="page-item">
                    <a class="page-link" asp-action="@Model.Action" asp-route-searchString="@Model.SearchString" 
               asp-route-itemsPerPage="@Model.ItemsPerPage" 
               asp-route-propertyType="@Model.PropertyType" 
               asp-route-pricePerMonth="@Model.PricePerMonth" 
               asp-route-sorting="@Model.Sorting" asp-route-id="@(Model.CurrentPage-3)">...</a>
                </li>
            }     
        }

        @for (int i = @Model.CurrentPage - 2; i < @Model.CurrentPage; i++)
        {
            if (i > 0)
            {
                <li class="page-item">
                    <a class="page-link" asp-action="@Model.Action" asp-route-searchString="@Model.SearchString" 
               asp-route-itemsPerPage="@Model.ItemsPerPage" 
               asp-route-propertyType="@Model.PropertyType" 
               asp-route-pricePerMonth="@Model.PricePerMonth" 
               asp-route-sorting="@Model.Sorting" asp-route-id="@i">@i</a>
                </li>
            }
        }

        <li class="page-item active">
            <a class="page-link" asp-action="@Model.Action" asp-route-searchString="@Model.SearchString" 
               asp-route-itemsPerPage="@Model.ItemsPerPage" 
               asp-route-propertyType="@Model.PropertyType" 
               asp-route-pricePerMonth="@Model.PricePerMonth" 
               asp-route-sorting="@Model.Sorting" asp-route-id="@Model.CurrentPage">@Model.CurrentPage</a>
        </li>

        @for (int i = @Model.CurrentPage + 1; i < @Model.CurrentPage + 3; i++)
        {
            if (i <= Model.PagesCount)
            {
                <li class="page-item">
                    <a class="page-link" asp-action="@Model.Action" asp-route-searchString="@Model.SearchString" 
               asp-route-itemsPerPage="@Model.ItemsPerPage" 
               asp-route-propertyType="@Model.PropertyType" 
               asp-route-pricePerMonth="@Model.PricePerMonth" 
               asp-route-sorting="@Model.Sorting" asp-route-id="@i">@i</a>
                </li>
            }
        }

        @if (Model.CurrentPage + 2 < Model.PagesCount)
        {
            @if (Model.CurrentPage + 2 < Model.PagesCount - 1)
            {
                <li class="page-item">
                    <a class="page-link" asp-action="@Model.Action" asp-route-searchString="@Model.SearchString" 
               asp-route-itemsPerPage="@Model.ItemsPerPage" 
               asp-route-propertyType="@Model.PropertyType" 
               asp-route-pricePerMonth="@Model.PricePerMonth" 
               asp-route-sorting="@Model.Sorting" asp-route-id="@(Model.CurrentPage+3)">...</a>
                </li>
            }
            <li class="page-item">
                <a class="page-link" asp-action="@Model.Action" asp-route-searchString="@Model.SearchString" 
               asp-route-itemsPerPage="@Model.ItemsPerPage" 
               asp-route-propertyType="@Model.PropertyType" 
               asp-route-pricePerMonth="@Model.PricePerMonth" 
               asp-route-sorting="@Model.Sorting" asp-route-id="@Model.PagesCount">@Model.PagesCount</a>
            </li>
        }

        <li class="page-item @(Model.CurrentPage==Model.PagesCount ? "disabled" : "")">
            <a class="page-link" asp-action="@Model.Action" asp-route-searchString="@Model.SearchString" 
               asp-route-itemsPerPage="@Model.ItemsPerPage" 
               asp-route-propertyType="@Model.PropertyType" 
               asp-route-pricePerMonth="@Model.PricePerMonth" 
               asp-route-sorting="@Model.Sorting" asp-route-id="@nextPage">&raquo;</a>
        </li>

    </ul>
</div>


